% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gc_auth.R
\name{gc_auth}
\alias{gc_auth}
\title{Authorize requests to the Google Calendar API}
\usage{
gc_auth(new_user = FALSE, key = getOption("googlecalendar.client_key"),
  secret = getOption("googlecalendar.client_secret"),
  cache = getOption("googlecalendar.oauth_cache"), verbose = FALSE)
}
\arguments{
\item{new_user}{Logical indicating whether to reauthorize using a new
account and remove the current cached credentials.}

\item{key, secret}{The client key and secret for the application. See
below for more information on overriding the default arguments.}

\item{cache}{Logical indicating whether to cache credentials in a
\code{.httr-oauth} file in the working directory.}

\item{verbose}{Logical indicating whether to print informative
messages.}
}
\value{
An OAuth token object.
}
\description{
Authorizes this package to interact with your Google Calendars. You
will be automatically directed to a web browser, asked to sign in to
your Google account, and prompted to grant permission for the package
to interact with the Google Calendar service.
}
\details{
Typically, users will not need to call this function explicitly, as
the authorization process will be triggered by the first action that
requires a user login.

While the client credentials \code{key} and \code{secret} are handled
by default when \code{googlecalendar} is loaded, the arguments must
be either interactively-specified or predefined in an
\code{.Rprofile} file using:

\preformatted{
options(
  googlecalendar.client_key = "<KEY>",
  googlecalendar.client_secret = "<SECRET>"
)
}

For more information on obtaining your own client credentials
required for authentication, see the official
\href{https://github.com/benjcunningham/googlecalendar}{README} on
GitHub.
}
\examples{
\dontrun{
# Load or refresh credentials.
# Note that a web browser authentication process may be triggered.
gs_auth()
}
}

