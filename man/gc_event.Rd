% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gc_event.R
\name{gc_event}
\alias{gc_event}
\alias{gc_event_id}
\alias{gc_event_query}
\title{Retrieve a calendar event}
\usage{
gc_event_query(x, ..., verbose = TRUE)

gc_event_id(x, id, verbose = TRUE)
}
\arguments{
\item{x}{\code{googlecalendar} object representing the calendar for
which to list events.}

\item{verbose}{Logical indicating whether to print informative
messages.}

\item{id}{Event ID as a character string.}

\item{\dots}{Additional parameters to be passed as part of the HTTP
request to the API. More information on these named arguments are
available below.}
}
\description{
Retrieves metadata for a Google Calendar event in the form of an
\code{event} object. This function requests information made
available through the Google Calendar API \code{Events} resource. Use
requires authorization.
}
\details{
The \code{gc_event_query} method can accept an arbitrary number of
named arguments via the \dots parameter. These values are passed as
part of the HTTP request to the \code{Events} resource. Queries may
include those parameters listed in the
\href{https://developers.google.com/google-apps/calendar/v3/reference/events/list#request}{Events: list}
reference documentation. Notable parameters include:

\itemize{
  \item{q} Free text search terms to find in any field.
  \item{singleEvents} Logical indicating whether to expand recurring
    events into instances and only return single one-off events.
  \item{timeMax} Exclusive upper bound of the start time filter
    (formatted as an RFC3339 timestamp).
  \item{timeMin} Inclusive lower bound of the end time filter
    (formatted as an RFC3339 timestamp).
}

For more information on the structure of the Events resource (and
therefore the expected contents of an \code{events} object), see the
Google Calendar API
\href{https://developers.google.com/google-apps/calendar/v3/reference/events}{Events Overview}.
}
\examples{
\dontrun{
gc_summary("Commitments") \%>\%
  gc_event_id("lohlv4duqhqu8bh6kfok9ookmk")

gc_summary("Commitments") \%>\%
  gc_event_query(cal, q = "Lunch with Will")
}

}

